rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Require auth everywhere
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Agents: write only if UID matches
    match /agents/{agentId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == agentId;
    }

    // Commands + Events
    match /commands/{docId} {
      allow write: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    // Snapshots: server-only checksum
    match /snapshots/{docId} {
      allow write: if request.auth.token.admin == true;
      allow read: if request.auth != null;
    }

    // Kill switch: admin-only
    match /system/killSwitch {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true;
    }

    // CLAUDE-META: Phase 9A Nexus paths
    // Agent lineage & logs
    match /agentLineage/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.uid == request.auth.uid
                   && request.time - resource.data.lastWriteTime() > duration.value(1000, "ms"); // naive rate limit hook
    }

    // Nexus drift logs (append-only)
    match /nexusDrift/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // immutable
    }

    // CLAUDE-META: Phase 9C Live Ops paths
    // Nexus agents (read/write by UID)
    match /nexusAgents/{agentId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update: if request.auth != null && resource.data.uid == request.auth.uid;
      allow delete: if false; // soft delete via status field
    }

    // Nexus control logs (append-only)
    match /nexusControlLog/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // immutable
    }

    // CLAUDE-META: Phase 10 Leapfrog paths
    // Constitution (read-only for agents, write only for humans with admin token)
    match /constitution/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true;
    }

    // Constraints queue
    match /constraintsQueue/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update: if request.auth != null && resource.data.uid == request.auth.uid;
      allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    // Self-modification logs (append-only audit trail)
    match /selfModificationLog/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false; // immutable audit trail
    }

    // Swarm tasks
    match /swarmTasks/{docId} {
      allow read: if request.auth != null && resource.data.uid == request.auth.uid;
      allow create, update: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow delete: if false; // soft delete via status field
    }
  }
}
