// agents/ForgeBuilder.js
import { addDoc, collection, serverTimestamp } from "firebase/firestore";
import { db } from "../lib/firebase.js";
import { QueueService } from "../src/features/mission/QueueService.js";

export class ForgeBuilder {
  constructor() {
    this.agentId = "forge-builder";
    this._running = false;
  }

  start() {
    this._running = true;
    console.log(`[ForgeBuilder] online`);
    this._loop();
  }

  stop() {
    this._running = false;
    console.log(`[ForgeBuilder] stopped`);
  }

  async _loop() {
    await QueueService.registerAgent(this.agentId, {
      title: "ForgeBuilder",
      version: "1.0.0",
      role: "Component Scaffolder",
    });

    while (this._running) {
      const mission = await QueueService.claimNextMission(
        this.agentId,
        ["forge.scaffold"]
      );
      if (!mission) {
        await new Promise(r => setTimeout(r, 2000));
        continue;
      }

      try {
        const result = await this.performTask(mission);
        await QueueService.completeMission(mission.id, result, "completed");
        await QueueService.log(this.agentId, "success", "Scaffolded", { result });
      } catch (err) {
        await QueueService.completeMission(mission.id, { error: String(err) }, "failed");
        await QueueService.log(this.agentId, "error", "ForgeBuilder failure", { err: String(err) });
      }
    }
  }

  async performTask(mission) {
    const { prompt, params = {} } = mission;
    const scaffold = this._generateSpec(prompt, params);
    const out = {
      missionId: mission.id,
      agentId: this.agentId,
      scaffold,
      createdAt: serverTimestamp(),
    };
    const ref = await addDoc(collection(db, "forgeOutputs"), out);
    return { ok: true, id: ref.id, path: scaffold.path };
  }

  _generateSpec(prompt, params) {
    const path = params.path || `src/components/Scaffold_${Date.now()}.jsx`;
    const style = params.style || "tailwind";
    const description = String(prompt || "Untitled component").trim();

    const content = `// Auto-generated by ForgeBuilder
export default function Component(props){
  return (
    <div className="p-4 rounded-2xl shadow border">
      <h3 className="font-semibold text-lg">${description}</h3>
    </div>
  );
}`;

    return { path, style, description, content };
  }
}
